trigger:
  branches:
    include:
      - main  # Runs pipeline on push to main branch

pool:
  name: hkAgent_pool  # Make sure this agent exists in DevOps

stages:
  # ------------- Stage 1: Build (CI) -------------
  - stage: Build
    displayName: 'Build Application'
    jobs:
      - job: BuildJob
        displayName: 'Build and Publish'
        steps:
          - task: UseDotNet@2
            inputs:
              packageType: 'sdk'
              version: '6.x'
              installationPath: $(Agent.ToolsDirectory)/dotnet

          - script: |
              dotnet restore
              dotnet publish -c Release -o $(Build.ArtifactStagingDirectory)
            displayName: 'Build and Publish'

          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)'
              ArtifactName: 'drop'
              publishLocation: 'Container'
            displayName: 'Publish Build Artifacts'

  # ------------- Stage 2: Deploy to Staging -------------
  - stage: Deploy_Staging
    displayName: 'Deploy to Staging'
    dependsOn: Build
    condition: succeeded()
    jobs:
      - deployment: DeployStaging
        displayName: 'Deploy to Staging'
        environment: staging
        strategy:
          runOnce:
            deploy:
              steps:
                - task: AzureWebApp@1
                  inputs:
                    azureSubscription: 'Your_Azure_Service_Connection'
                    appType: 'webApp'
                    appName: 'Your_Staging_App_Name'
                    package: '$(Pipeline.Workspace)/drop/*.zip'

  # ------------- Stage 3: Deploy to Production -------------
  - stage: Deploy_Production
    displayName: 'Deploy to Production'
    dependsOn: Deploy_Staging
    condition: succeeded()
    jobs:
      - deployment: DeployProduction
        displayName: 'Deploy to Production'
        environment: production
        strategy:
          runOnce:
            deploy:
              steps:
                - task: AzureWebApp@1
                  inputs:
                    azureSubscription: 'Your_Azure_Service_Connection'
                    appType: 'webApp'
                    appName: 'Your_Production_App_Name'
                    package: '$(Pipeline.Workspace)/drop/*.zip'
